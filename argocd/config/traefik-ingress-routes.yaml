apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-server-route-web
  namespace: argocd
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`argo.${DOMAIN}`)
      kind: Rule
      middlewares:
        - name: redirect-to-https
      services:
        - name: argocd-server
          port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-server-route-websecure
  namespace: argocd
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`argo.${DOMAIN}`)
      kind: Rule
      services:
        - name: argocd-server
          port: 443
          scheme: https
          serversTransport: backend-untrusted-tls
  tls:
    secretName: argocd-server-route-tls
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-to-https
  namespace: argocd
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: backend-untrusted-tls
  namespace: argocd
spec:
    insecureSkipVerify: true
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: argocd-certificate
  namespace: argocd
spec:
  secretName: argocd-server-route-tls
  dnsNames:
    - argo.${DOMAIN}
  issuerRef:
    name: lets-encrypt
    kind: ClusterIssuer
...
